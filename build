#!/bin/bash

clean=
buildargs=
outfile=ds-kernel_signed.zip

input="$1 $2"
if [[ -z "$input" ]] 
	then
	buildargs=-j4
	clean=true
fi

if [[ "$1" == *"-j"* ]]; then
	buildargs=$1
elif [[ "$2" == *"-j"* ]]; then
	buildargs=$2
else
	buildargs=-j4
fi

if [[ "$1" == *"-c"* ]]; then
	clean=true
elif [[ "$2" == *"-c"* ]]; then
	clean=true
else
	clean=false
fi

clear
rm build_log.txt >>build_log.txt
echo Build Jobs: $buildargs
sleep 2
echo Cleaning workspace ...
rm -rf *.zip
rm -rf flashable/zip/system
mkdir flashable/zip/system/ && mkdir flashable/zip/system/lib/ && mkdir flashable/zip/system/lib/modules/
cd flashable/zip/kernel/
rm -rf zImage arch/arm/boot/zImage
cd ../../..
if [[ "$clean" == "true" ]]; then
make clean $buildargs | tee build_log.txt
fi
echo >> build_log.txt
echo Writing configs ...
make doubleshot_defconfig | tee -a build_log.txt
echo >> build_log.txt
make $buildargs | tee -a build_log.txt
if [ ! -f arch/arm/boot/zImage ];
then
	echo
	echo An error occured in the build process, aborting...
        exit 1
fi
clear
echo Creating Flash-able Zip ...
cp -f arch/arm/boot/zImage flashable/zip/kernel/zImage
find -iname "*.ko" -exec cp {} flashable/zip/system/lib/modules/ \; >/dev/null
cd flashable/zip/
zip -r9 ../../tmp-kernel.zip *
cd ../..
java -jar flashable/tools/signapk.jar flashable/tools/testkey.x509.pem flashable/tools/testkey.pk8 tmp-kernel.zip $outfile
rm -rf tmp-kernel.zip
echo
echo Done - Your File is $outfile
